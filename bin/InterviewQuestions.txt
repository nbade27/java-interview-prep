Inheritance
===========

	
	What is inheritance?
	Why we need Inheritance?
	How to implement inheritance in java?
	What are advantages and disadvantages of inheritance?
	what is Is-A relationship in java?
	which is super class of every class in java?
	Can a class extend Itself?
	Can we assign super class to subclass?
	Can a class extend more than one class?
	Are constructor and Instance Initialization block inherit to subClass?
	Are Static members inherited to subClass?
	Can we extend final class in java?
	Can a final method be overriden in java?
	Can we inherit private members of base class to its subClass?
	What is the order of calling constructors in case of inheritance?
	What are types of inheritance?	
	Why java is not supporting Multiple Inheritance?
	How will you restrict a member of a class from inheriting its subClass?
	Can we access subclass members if we create an object of superclass?
	What happens if both superclass and subclass have a field with same name?
	Is interface inherited from the object class?
	How will you prohibit inheritance in java?
	Why we cannot call GrandParent class methods in GrandParent class in java?
	What will happen if we declare super class constructor as private?
	How many ways to implement relationships among classes in Java? --> Association,Aggregation,Composition,Inheritance
	What is association in OOP?
	What is  Aggregation?
	What is composition?
	Which is more tightly bound? Inheritance or Composition?
	When will you prefer composition over inheritance?
	How aggregation and composition are different concepts?
	


Refer this link for answers
https://www.scientecheasy.com/2021/02/inheritance-interview-questions.html/3/


Association : Creating same class object twice and 

Abstraction
===========
																					
1.What is Abstraction in java?
2.How to achieve or implement Abstraction in Java?
3.What is Abstract class in Java? How to define it?
4.What is difference between abstract class and concrete class?
5.What is Abstract in Java?
6.Can abstract modifier applicable for variables?
7.What is Abstract method in Java?
8.Can an abstract method be declared as static?
9.Can an abstract method be declared with private modifier?
10.What is concrete method in Java?
11.When to use Abstract class Java?
12.When to use abstract method in java?
13.Is abstract a pure abstraction in java?
14.Is it possible to create object of abstract class in java?
15.Is it possible that an abstract class can have without any abstract method?
16.Can abstract class have constructor?
17.Is abstract class allow define private,final,static, and concrete methods?
18.Is it possible to achieve Multiple inheritance through abstract class?
19.Can we make abstract class without abstract keyword?
20.Can we define abstract method inside non-abstract(concrete) class?
21.What will happen if we do not override all abstract methods in subclass?
22.What is the difference between Abstraction and encapsulation?
23.Why abstract class has constructor even though you cannot create object?
24.Why should we create reference to super class(abstract class reference)?
25.What is the advantage of abstract class in Java?

Refer below link for answers
https://www.scientecheasy.com/2021/02/abstract-class-interview-questions.html/


Polymorphism
============

	1. What is Polymorphism in Java OOPs?
	2. What are the types of Polymorphism in Java?
	3. What are different ways to achieve or implement polymorphism in Java?
	4. How is Inheritance useful to achieve Polymorphism in Java?
	5. What are the advantages of Polymorphism?
	6. What are the differences between Polymorphism and Inheritance in Java?
	7. What is Compile time polymorphism (Static polymorphism)?
	8. How to achieve or implement static polymorphism in Java?
	9. How Java compiler differentiate between methods in Compile time Polymorphism?
	10. What is Runtime Polymorphism (Dynamic Polymorphism)?
	11. How to achieve/implement dynamic polymorphism in Java?
	12. Is it possible to implement runtime polymorphism by data members in Java?
	13. What are the differences between compile-time polymorphism and runtime polymorphism in java?
	14. What is Binding in Java?
	15. What are the types of binding in Java?
	16. What is Static binding in Java?
	17. How Java compiler performs static binding?
	18. Why static binding is also called early binding in Java?
	19. Give an example of static binding.
	20. What is Dynamic binding in Java?
	21. How JVM performs dynamic binding in Java?
	22. Why Dynamic binding is also called late binding in java?
	23. Give an example of dynamic binding in Java.
	24. What is the difference between static binding and dynamic binding in Java?
	25. Why binding of private, static, and final methods are always static binding in Java?
	
	Refer below link for answers
		https://www.scientecheasy.com/2021/02/polymorphism-interview-questions.html/
	


Encapsulation
		
		What is Encapsulation in Java? Why is it called Data hiding?
		What are the important features of Encapsulation?
		What is the advantage of Encapsulation?
		What are the main benefits of using encapsulation in Java?
		How to achieve encapsulation in Java? Give an example.
		What is data hiding in Java?
		How to achieve Data hiding programmatically?
		What is a Tightly encapsulated class in Java?
		What is the difference between Abstraction and Encapsulation?
		Can we achieve abstraction without encapsulation in Java?
		What are getter and setter methods in Java?
		Does reflection violates encapsulation in Java?
		What is reflection API in java?
		Explain design pattern based on encapsulation in java?
		How can the variable of the EncapsulationTest be accessed by using getter and setter methods?		
		
		
		Refer this link for answers
		https://www.scientecheasy.com/2018/06/real-encapsulation-interview-questions-answers.html/								
	
	
Multi-Threading 
		
		What is Thread in Java?
		
		
		
		Refer below link for answers
		https://www.scientecheasy.com/2021/05/java-multithreading-interview-questions.html/	
		
		
How to make a class as Mutable in java?
	Refer below link
	https://www.digitalocean.com/community/tutorials/how-to-create-immutable-class-in-java																	
		
		
